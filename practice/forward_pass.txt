D:\JetBrains\pythonProject\venv\Scripts\python.exe D:\JetBrains\pythonProject\machine_learning\practice\practice_model2.py

Info on model architecture:
LeNet5(
  (conv1): Conv2d(1, 6, kernel_size=(5, 5), stride=(1, 1))
  (pool1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  (conv2): Conv2d(6, 16, kernel_size=(5, 5), stride=(1, 1))
  (pool2): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  (fc1): Linear(in_features=400, out_features=120, bias=True)
  (fc2): Linear(in_features=120, out_features=84, bias=True)
  (fc3): Linear(in_features=84, out_features=10, bias=True)
)

Before forward pass:
tensor([[[[0.9137, 0.8066, 0.1495,  ..., 0.6591, 0.4661, 0.7534],
          [0.2003, 0.0926, 0.7801,  ..., 0.7564, 0.0696, 0.6471],
          [0.8361, 0.9028, 0.1967,  ..., 0.8309, 0.0355, 0.6172],
          ...,
          [0.6478, 0.9365, 0.8593,  ..., 0.5993, 0.6021, 0.4673],
          [0.6222, 0.0572, 0.2933,  ..., 0.9073, 0.8636, 0.8382],
          [0.9251, 0.1461, 0.7034,  ..., 0.3321, 0.4535, 0.0326]]]])
torch.Size([1, 1, 32, 32])

After forward pass:
tensor([[ 0.0196, -0.0489,  0.0141,  0.1191,  0.1301, -0.0557, -0.0005, -0.0602,
         -0.0155, -0.0168]], grad_fn=<AddmmBackward0>)

Process finished with exit code 0